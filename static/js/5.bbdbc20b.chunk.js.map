{"version":3,"sources":["Components/Content/Dialogs/MessageForm.tsx","Components/Content/Dialogs/Message.tsx","redux/selectores/dialogs-selector.ts","Components/Content/Dialogs/Dialogs.tsx"],"names":["MessageForm","React","memo","handleSubmit","useState","setMessage","onSubmit","createField","Input","disabled","ReduxMessageForm","reduxForm","form","Message","chatUser","to","userId","src","photo","photos","style","height","width","message","chatUsersSelector","state","dialogs","chatUsers","compose","WithClearProfileData","WithPaginatorVisibility","withRedirectToLogin","console","log","dispatch","useDispatch","useSelector","useEffect","creatChat","deleteChat","scrollToTop","d","document","getElementById","scrollTo","top","scrollHeight","clientHeight","behavior","overflowY","marginRight","id","map","key","value","length","sendMessage","reset"],"mappings":"gMAcaA,EAA6EC,IAAMC,MAAK,YAAsB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAExFC,mBAAS,IAF+E,mBAEtGC,GAFsG,WAGtH,OACI,6BACI,0BAAMC,SAAUH,GACXI,YAAY,UAAW,oBAAqB,GAAIC,IAAO,GAAI,IAC5D,4BAAQF,SAAU,kBAAMD,EAAW,KAAKI,UAAU,GAAlD,aAMHC,EAAmBC,YAAmC,CAAEC,KAAM,WAA3CD,CAAuDX,G,0BCrB1Ea,EAAiDZ,IAAMC,MAAK,YAAmB,IAAhBY,EAAe,EAAfA,SACxE,OACI,6BACI,kBAAC,IAAD,CAASC,GAAE,mBAAcD,EAASE,SAC9B,yBAAKC,IAAKH,EAASI,OAASC,IAAQC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,WAEvER,EAASS,Y,eCVTC,EAAkB,SAACC,GAAmB,OAAOA,EAAMC,QAAQC,W,SCkDzDC,sBAA6BC,IAAsBC,IAAyBC,IAA5EH,EAtCW,WACtBI,QAAQC,IAAI,aACZ,IAAMC,EAAWC,cACXR,EAAYS,YAAYZ,GAC9Ba,qBAAU,WAEN,OADAH,EAASI,eACF,WACHJ,EAASK,kBAEd,IACCF,qBAAU,WACNG,MACD,CAACb,IAER,IAAMa,EAAc,WAChB,IAAIC,EAAIC,SAASC,eAAe,MAChCF,GAAKA,EAAEG,SAAS,CAAEC,IAAKJ,EAAEK,aAAeL,EAAEM,aAAcC,SAAU,YAUtE,OACC,yBAAK5B,MAAO,CAAEC,OAAQ,QAAS4B,UAAW,OAAQC,YAAa,QAAWC,GAAG,MACtE,oCACKxB,QADL,IACKA,OADL,EACKA,EAAWyB,KAAI,SAAAtC,GAAQ,OAAE,kBAACD,EAAD,CAASC,SAAUA,EAAUuC,IAAKvC,EAASqC,QAErE,6BACI,kBAACzC,EAAD,CAAkBJ,SAbjB,SAACgD,GACVA,EAAM/B,SAAW+B,EAAM/B,QAAQgC,SAC/BC,YAAYF,EAAM/B,SAClBW,EAASuB,YAAM","file":"static/js/5.bbdbc20b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { createField } from '../../commons/CreateField';\r\nimport { Input } from '../../commons/Input';\r\nimport { InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { ValueDataType } from './Dialogs';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../redux/reduxStore';\r\n\r\n\r\n\r\ntype PropsType = {\r\n    \r\n}\r\n\r\nexport const MessageForm: React.FC<InjectedFormProps<ValueDataType,PropsType>&PropsType> =React.memo(({ handleSubmit}) => {\r\n    // const status = useSelector((state:RootState)=>state.dialogs.status)\r\n    const [message, setMessage] = useState('');\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                {createField('message', 'enter new message', [], Input, {}, '')}\r\n                <button onSubmit={() => setMessage('')} disabled={false}>Send</button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n});\r\nexport const ReduxMessageForm = reduxForm<ValueDataType,PropsType>({ form: 'dialogs'})(MessageForm)\r\n","import React from 'react';\r\nimport { chatUsersType } from '../../../redux/dialogs-reducer';\r\nimport photos from '../../../images/userPhoto.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const Message: React.FC<{ chatUser: chatUsersType }> = React.memo(({ chatUser }) => {\r\n    return (\r\n        <div >\r\n            <NavLink to={`/profile/${chatUser.userId}`}>\r\n                <img src={chatUser.photo || photos} style={{ height: '50px', width: \"50px\" }} />\r\n            </NavLink>\r\n            {chatUser.message}\r\n        </div>\r\n    );\r\n});\r\n","import { RootState } from \"../reduxStore\";\r\n\r\nexport const chatUsersSelector=(state:RootState)=>{return state.dialogs.chatUsers}","import React, { useEffect} from 'react';\r\nimport { reset } from 'redux-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ReduxMessageForm } from './MessageForm';\r\nimport { Message } from \"./Message\";\r\nimport { compose } from 'redux';\r\nimport { WithClearProfileData, WithPaginatorVisibility, withRedirectToLogin } from '../../HOCS/Hocs';\r\nimport { chatUsersSelector } from '../../../redux/selectores/dialogs-selector';\r\nimport { creatChat, deleteChat, sendMessage } from '../../../redux/dialogs-reducer';\r\n\r\n\r\n\r\n\r\nexport type ValueDataType = { message: string }\r\nconst Dialogs: React.FC = () => {\r\n    console.log('>>message')\r\n    const dispatch = useDispatch();\r\n    const chatUsers = useSelector(chatUsersSelector)\r\n    useEffect(() => { \r\n        dispatch(creatChat())\r\n        return () => {\r\n            dispatch(deleteChat())\r\n        }\r\n    }, []);\r\n        useEffect(() => {\r\n            scrollToTop()\r\n        }, [chatUsers]);\r\n\r\n    const scrollToTop = () => {\r\n        let d = document.getElementById('dd')\r\n        d && d.scrollTo({ top: d.scrollHeight - d.clientHeight, behavior: \"smooth\" })\r\n    }\r\n  \r\n    const onSubmit = (value: ValueDataType) => {\r\n        if (value.message && value.message.length) {\r\n            sendMessage(value.message)\r\n            dispatch(reset('dialogs'))\r\n        }\r\n    };\r\n    \r\n    return (\r\n     <div style={{ height: '700px', overflowY: 'auto', marginRight: '40px' } } id=\"dd\">\r\n            <div>\r\n                {chatUsers?.map(chatUser=><Message chatUser={chatUser} key={chatUser.id}/>)} \r\n              \r\n                <div>\r\n                    <ReduxMessageForm onSubmit={onSubmit} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default compose<React.ComponentType>(WithClearProfileData, WithPaginatorVisibility, withRedirectToLogin)(Dialogs) \r\n"],"sourceRoot":""}